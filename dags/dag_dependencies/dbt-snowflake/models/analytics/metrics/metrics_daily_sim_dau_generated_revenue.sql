{{
    config(
        tags=['daily'],
        materialized='incremental',
        unique_key='date_utc',
        snowflake_warehouse='PROD_WH_LARGE'

    )
}}

WITH sim_dau_cte AS (
    SELECT
        date_utc,
        CLIENT_TYPE,
        sub_type,
        user_set_id,
        dau
    FROM 
        {{ ref('user_segment_user_set_daily_tn_type') }}
        JOIN {{ ref('dau_user_set_active_days') }} USING (user_set_id, date_utc)
    WHERE 
        sub_type not in ('NULL', 'Non-Sub', 'TN Employee/with data')
        AND CLIENT_TYPE IN ('TN_IOS_FREE', 'TN_ANDROID', '2L_ANDROID','TN_WEB')
        
        {% if is_incremental() %}
            AND date_utc >= (SELECT MAX(date_utc) FROM {{ this }}) - INTERVAL '30 days'
        {% endif %}
    
), 
sim_dau_gen_revenue_cte AS ( 
        --If the user is a SIM DAU, the Ad revenue generated by user should be added to the Revenue generated from SIM DAU
    SELECT a.user_set_id,b.DATE_UTC,b.client_type,c.first_country_code, b.adjusted_revenue
    FROM
        {{ ref('analytics_users') }} a
        JOIN {{ ref('revenue_user_daily_ad') }} b on a.username = b.username
        JOIN {{ ref('user_sets') }} c ON c.first_username = b.username and c.user_set_id = a.user_set_id
    WHERE
        {% if is_incremental() %}
            date_utc >= (SELECT MAX(date_utc) FROM {{ this }}) - INTERVAL '30 days'
        {% endif %}

)
    SELECT 
        date_utc,
        CASE WHEN UPPER(CLIENT_TYPE) IN ('TN_ANDROID','2L_ANDROID') THEN 'ANDROID (INCL 2L)'
        ELSE CLIENT_TYPE END AS CLIENT_TYPE,
        sub_type,
        first_country_code AS country_code,
        sum(dau) AS sim_dau,
        sum(adjusted_revenue) AS daily_ad_revenue,
        current_timestamp AS inserted_timestamp 
    FROM sim_dau_cte FULL OUTER JOIN sim_dau_gen_revenue_cte using(date_utc,CLIENT_TYPE,user_set_id)
    GROUP BY 1,2,3,4